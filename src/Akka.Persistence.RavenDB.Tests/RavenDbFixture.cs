using System.Diagnostics;using Akka.Configuration;using Raven.Client.Documents;using Raven.TestDriver;namespace Akka.Persistence.RavenDB.Tests{    public class RavenDbFixture : RavenTestDriver    {        private IDocumentStore _store;        static RavenDbFixture()        {            ConfigureServer(new TestServerOptions            {                ServerUrl = "http://localhost:8080",                DataDirectory = @"C:\Work\akka\RavenDBTestDir",            });        }        public string Name => _store.Database;        public RavenDbFixture()        {            _store = GetDocumentStore();        }        public override void Dispose()        {            _store.Dispose();            base.Dispose();        }        public Config CreateSpecConfigAndStore(out IDocumentStore store)        {            store = GetDocumentStore();            return CreateSpecConfig(store.Database);        }        public Config CreateSpecConfig(string name = null)        {            var timeout = Debugger.IsAttached ? "300s" : "3s";            var specString = $$$"""                                akka.test.single-expect-default = {{{ timeout }}}                                akka.persistence {                                   publish-plugin-commands = on                                   journal {                                       plugin = "akka.persistence.journal.ravendb"                                       ravendb {                                           class = "Akka.Persistence.RavenDB.Journal.RavenDbJournal, Akka.Persistence.RavenDB"                                           collection = "EventJournal"                                           name = {{{name ?? Name}}}                                           event-adapters {
                                                color-tagger  = "Akka.Persistence.TCK.Query.ColorFruitTagger, Akka.Persistence.TCK"
                                            }
                                            event-adapter-bindings = {
                                                "System.String" = color-tagger
                                            }                                       }                                   }                                   snapshot-store {                                        plugin = "akka.persistence.snapshot-store.ravendb"                                        ravendb {                                            class = "Akka.Persistence.RavenDB.Snapshot.RavenDbSnapshotStore, Akka.Persistence.RavenDB"                                            auto-initialize = on                                            collection = "SnapshotStore"                                            name = {{{name ?? Name}}}                                        }                                    }                                    query {                                        ravendb {                                            class = "Akka.Persistence.RavenDB.Query.RavenDbReadJournalProvider, Akka.Persistence.RavenDB"                                            refresh-interval = 1s                                        }                                    }                                }                                                                """;            return ConfigurationFactory.ParseString(specString);        }    }}