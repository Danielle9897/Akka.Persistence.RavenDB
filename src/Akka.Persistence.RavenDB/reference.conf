akka.persistence {
	journal {
		ravendb {
			# qualified type name of the RavenDB persistence journal actor
			class = "Akka.Persistence.RavenDb.Journal.RavenDbJournal, Akka.Persistence.RavenDb"

			# dispatcher used to drive journal actor
			plugin-dispatcher = "akka.actor.default-dispatcher"

			# urls to the ravendb cluster
			urls = ["http://localhost:8080"]
		
			# database name where everything is stored
			name = "Akka"
			
			# Per-call timeout setting - Journal will err on the side of caution and fail calls that take longer than this
			# to complete. This is to prevent the journal from blocking indefinitely if the database is slow or unresponsive.
			# If you experience frequent failures due to timeouts, you may want to increase this value.
			# Default: 10 seconds
			call-timeout = 10s
		}
	}

	snapshot-store {
		ravendb {
			# qualified type name of the RavenDB persistence snapshot actor
			class = "Akka.Persistence.RavenDb.Snapshot.RavenDbSnapshotStore, Akka.Persistence.RavenDb"

			# dispatcher used to drive snapshot storage actor
			plugin-dispatcher = "akka.actor.default-dispatcher"

            # Per-call timeout setting - Journal will err on the side of caution and fail calls that take longer than this
            # to complete. This is to prevent the journal from blocking indefinitely if the database is slow or unresponsive.
            # If you experience frequent failures due to timeouts, you may want to increase this value.
            # Default: 10 seconds
            call-timeout = 10s
		}
	}

	query {
        ravendb {
            # Implementation class of the EventStore ReadJournalProvider
            class = "Akka.Persistence.RavenDb.Query.RavenDbReadJournalProvider, Akka.Persistence.RavenDb"

            # Absolute path to the write journal plugin configuration entry that this 
            # query journal will connect to. 
            # If undefined (or "") it will connect to the default journal as specified by the
            # akka.persistence.journal.plugin property.
            write-plugin = ""

            # The SQL write journal is notifying the query side as soon as things
            # are persisted, but for efficiency reasons the query side retrieves the events 
            # in batches that sometimes can be delayed up to the configured `refresh-interval`.
            refresh-interval = 3s
  
            # How many events to fetch in one query (replay) and keep buffered until they
            # are delivered downstreams.
            max-buffer-size = 500
        }
    }
}